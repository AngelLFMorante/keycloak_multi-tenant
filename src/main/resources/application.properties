############################################
#           SERVIDOR LOCAL (SPRING)        #
############################################
server.port=8081


############################################
#      CONFIGURACIÓN GLOBAL DE KEYCLOAK    #
############################################
# URL base de Keycloak (donde está corriendo tu instancia)
keycloak.auth-server-url=http://localhost:8080


############################################
#  CONFIGURACIÓN BASE (TEMPLATE) OAUTH2    #
#  Esta configuración sirve como PLANTILLA #
#  para todos los tenants dinámicos.       #
############################################

# --- REGISTRO DEL CLIENTE (CLIENT REGISTRATION) ---
# Este es el clientId base (puede ser un placeholder ya que se sobrescribe dinámicamente)
spring.security.oauth2.client.registration.keycloak.client-id=placeholder-client-id-base

# Si tus clientes son confidenciales, coloca un secret común aquí (de lo contrario, déjalo vacío)
spring.security.oauth2.client.registration.keycloak.client-secret=oMfU7zRCWmdloK75dPKKio3x1v6FlTqm

# Tipo de flujo OAuth2 (Authorization Code Flow para aplicaciones web)
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code

# URI de redirección (usa {realmName} y {registrationId} que serán reemplazados dinámicamente)
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/{realmName}/login/oauth2/code/{registrationId}

# Scopes que se solicitarán durante la autenticación
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email


# --- PROVEEDOR OIDC (PROVIDER CONFIG) ---
# URL del emisor OIDC para cada tenant (usa {realmName} como plantilla)
spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.auth-server-url}/realms/{realmName}

# Atributo del usuario que será tratado como nombre de usuario principal
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username


############################################
#         LOGGING PARA DEPURACIÓN          #
############################################
# Nivel de log para Spring Security
logging.level.org.springframework.security=DEBUG

# Nivel de log para Keycloak (útil para depurar tokens y claims)
logging.level.org.keycloak=DEBUG


####################################
#         KeyCloak Config          #
####################################
keycloak.admin-server-url=http://localhost:8080/auth
keycloak.admin.realm=master
keycloak.admin.username=admin
keycloak.admin.password=admin
keycloak.admin.client-id=admin-cli
