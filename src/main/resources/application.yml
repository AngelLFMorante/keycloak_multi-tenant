# src/main/resources/application.yml

# SERVIDOR LOCAL (SPRING)
server:
  port: 8081

# CONFIGURACIÓN GLOBAL DE KEYCLOAK
keycloak:
  # URL base de Keycloak (donde está corriendo tu instancia)
  auth-server-url: http://localhost:8080
  single-realm-name: plexus # El nombre del único realm de Keycloak

  # Administración de Keycloak
  admin-server-url: http://localhost:8080/auth
  admin:
    realm: master
    username: admin
    password: admin
    client-id: admin-cli

  # Mapeo de Client IDs a Client Secrets (Client ID de Keycloak : Client Secret de Keycloak)
  # Esto se mapeará a tu KeycloakProperties.clientSecrets
  client-secrets:
    plexus-app-client: secret-for-plexus
    inditex-client: secret-for-inditex
    mercadona: secret-for-mercadona

  # Nuevo mapeo: Tenant ID de la URL : Client ID de Keycloak
  # Esto se mapeará a tu KeycloakProperties.tenantClientMapping si lo añades
  tenant-client-mapping:
    plexus: plexus-app-client
    inditex: inditex-client
    mercadona: mercadona

# CONFIGURACIÓN BASE (TEMPLATE) OAUTH2
spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: placeholder-client-id-base
            # Si tus clientes son confidenciales, coloca un secret común aquí
            client-secret: 5LR8rwO0VLFpog0lCrxrODfxlwQEEj7g #oMfU7zRCWmdloK75dPKKio3x1v6FlTqm
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/{realmName}/login/oauth2/code/{registrationId}'
            scope: openid,profile,email
        provider:
          keycloak:
            issuer-uri: '${keycloak.auth-server-url}/realms/{realmName}'
            user-name-attribute: preferred_username

# LOGGING PARA DEPURACIÓN
logging:
  level:
    org:
      springframework:
        security: DEBUG # Nivel de log para Spring Security
      keycloak: DEBUG # Nivel de log para Keycloak
    com:
      example:
        keycloakdemo: DEBUG # Nivel de log para tu paquete